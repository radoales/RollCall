@model PaginatedListIndexSchoolClassVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var date = "";
    var isUpcoming = Model.Set == "upcoming" ? "disabled" : "";
    var isPaased = Model.Set == "passed" ? "disabled" : "";
}

<div class="container">
    <input id="set" type="hidden" asp-for="Set" />
    <h1 class="text-center">Classes</h1>
    <div class="row">
        <div class="col-md-6">
            <button onclick="UpcomingClasses()" class="btn btn-outline-secondary btn-lg btn-block" @isUpcoming>Upcoming Classes</button>
        </div>
        <div class="col-md-6">
            <button onclick="PassedClasses()" class="btn btn-outline-secondary btn-lg btn-block" @isPaased>Passed Classes</button>
        </div>
    </div>
    @if (this.User.IsInRole(AdminRole))
    {
        <p>
            <a class="btn btn-primary" asp-action="Create">Add new Class</a>
        </p>
    }
    <table class="table">
        <thead>
            <tr class="text-center">
                <th>
                    Subject
                </th>
                <th>
                    Time
                </th>
                <th>
                    Participants
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SchoolClasses)
            {
                if (date != item.Date || date == "")
                {
                    date = item.Date;
                    <tr class="text-center">
                        <td class="text-center" colspan="4">
                            <div style="font-size:20px"><strong>@date</strong></div>
                        </td>
                    </tr>

                }
                <tr class="text-center" style="background-color: @(item.IsCurrentClass ? "yellow" : "white")">
                    <td>
                        @Html.DisplayFor(modelItem => item.Subject.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Time)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Participants)/  @Html.DisplayFor(modelItem => item.UsersInClass)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Open Class</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @*Paging*@
    @{
        var prevDisabled = !Model.SchoolClasses.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.SchoolClasses.HasNextPage ? "disabled" : "";
        var active = "";
    }

    <nav aria-label="Page navigation example"> 
        <ul class="pagination justify-content-center">
            <li class="page-item @prevDisabled">
                <a class="page-link" onclick="pagingSchoolClasses(@(Model.SchoolClasses.PageIndex - 1))" href="#">Previous</a>
            </li>
            @for (int i = 1; i <= Model.SchoolClasses.TotalPages; i++)
            {


                active = Model.SchoolClasses.PageIndex == i ? "active" : "";

                <li class="page-item @active">
                    <a class="page-link" onclick="pagingSchoolClasses(@i)" href="#">@i</a>
                </li>
            }
            <li class="page-item @nextDisabled">
                <a class="page-link" onclick="pagingSchoolClasses(@(Model.SchoolClasses.PageIndex + 1))" href="#">Next</a>
            </li>
        </ul>
    </nav>

   
</div>
<script type="text/javascript">


</script>