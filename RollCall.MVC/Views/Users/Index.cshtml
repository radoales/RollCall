@model PaginatedUserIndexVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Students</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                Student Number
            </th>
            <th>
                Student Name
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td><a asp-action="Details" asp-route-id="@item.Id">Student Info</a></td>
            </tr>
        }
    </tbody>
</table>
@*Paging*@
@{
    var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
    var active = "";
}


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item @prevDisabled">
            <a class="page-link" onclick="pagingUsers(@(Model.Users.PageIndex - 1))" href="#">Previous</a>
        </li>
        @for (int i = 1; i <= Model.Users.TotalPages; i++)
        {


            active = Model.Users.PageIndex == i ? "active" : "";

            <li class="page-item @active">
                <a class="page-link" onclick="pagingUsers(@i)" href="#">@i</a>
            </li>
        }
        <li class="page-item @nextDisabled">
            <a class="page-link" onclick="pagingUsers(@(Model.Users.PageIndex + 1))" href="#">Next</a>
        </li>
    </ul>
</nav>