@model AddOrRemoveUsersFromSubjectVM

@{
    ViewData["Title"] = "Add or Remove Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="text-center">@Model.Subject.Name</h4>
<hr />
<form asp-action="Edit">
    <div class="row">
        <div class="col-md-10">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Name" placeholder="type new name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary">Change  name</button>
        </div>

    </div>
</form>
<hr />
<div class="row">
    <input id="subjectId" type="hidden" asp-for="Id" />
    <div class="col-md-6">
        <input id="filter-name" placeholder="search" type="text" class="form-control" />
        @await Html.PartialAsync("_AddUserToSubjectPartial", Model.UsersToAdd)

    </div>
    <div class="col-md-6">
        <table class="table">
            <thead>
                <tr>
                    <th>Student Number</th>
                    <th>Name</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.UsersInSubject)
                {
                    <tr>

                        <td>@item.StudentNumber</td>
                        <td>@item.FirstName @item.LastName</td>
                        <td>
                            <button id="Remove" type="button" class="btn btn-danger" onclick="Remove(this)" data-id="@item.Id">Remove</button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}